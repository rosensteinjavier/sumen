.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "SMM::Schema::Result::Organization 3"
.TH SMM::Schema::Result::Organization 3 "2016-04-01" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
SMM::Schema::Result::Organization
.SH "COMPONENTS LOADED"
.IX Header "COMPONENTS LOADED"
.IP "\(bu" 4
DBIx::Class::InflateColumn::DateTime
.IP "\(bu" 4
DBIx::Class::TimeStamp
.IP "\(bu" 4
DBIx::Class::PassphraseColumn
.ie n .SH "TABLE: ""organization"""
.el .SH "TABLE: \f(CWorganization\fP"
.IX Header "TABLE: organization"
.SH "ACCESSORS"
.IX Header "ACCESSORS"
.SS "id"
.IX Subsection "id"
.Vb 4
\&  data_type: \*(Aqinteger\*(Aq
\&  is_auto_increment: 1
\&  is_nullable: 0
\&  sequence: \*(Aqorganization_id_seq\*(Aq
.Ve
.SS "name"
.IX Subsection "name"
.Vb 2
\&  data_type: \*(Aqtext\*(Aq
\&  is_nullable: 0
.Ve
.SS "address"
.IX Subsection "address"
.Vb 2
\&  data_type: \*(Aqtext\*(Aq
\&  is_nullable: 1
.Ve
.SS "postal_code"
.IX Subsection "postal_code"
.Vb 2
\&  data_type: \*(Aqtext\*(Aq
\&  is_nullable: 1
.Ve
.SS "city_id"
.IX Subsection "city_id"
.Vb 3
\&  data_type: \*(Aqinteger\*(Aq
\&  is_foreign_key: 1
\&  is_nullable: 1
.Ve
.SS "description"
.IX Subsection "description"
.Vb 2
\&  data_type: \*(Aqtext\*(Aq
\&  is_nullable: 1
.Ve
.SS "email"
.IX Subsection "email"
.Vb 2
\&  data_type: \*(Aqtext\*(Aq
\&  is_nullable: 1
.Ve
.SS "website"
.IX Subsection "website"
.Vb 2
\&  data_type: \*(Aqtext\*(Aq
\&  is_nullable: 1
.Ve
.SS "phone"
.IX Subsection "phone"
.Vb 2
\&  data_type: \*(Aqtext\*(Aq
\&  is_nullable: 1
.Ve
.SS "subprefecture_id"
.IX Subsection "subprefecture_id"
.Vb 3
\&  data_type: \*(Aqinteger\*(Aq
\&  is_foreign_key: 1
\&  is_nullable: 1
.Ve
.SS "organization_type_id"
.IX Subsection "organization_type_id"
.Vb 3
\&  data_type: \*(Aqinteger\*(Aq
\&  is_foreign_key: 1
\&  is_nullable: 1
.Ve
.SH "PRIMARY KEY"
.IX Header "PRIMARY KEY"
.IP "\(bu" 4
\&\*(L"id\*(R"
.SH "RELATIONS"
.IX Header "RELATIONS"
.SS "campaigns"
.IX Subsection "campaigns"
Type: has_many
.PP
Related object: SMM::Schema::Result::Campaign
.SS "city"
.IX Subsection "city"
Type: belongs_to
.PP
Related object: SMM::Schema::Result::City
.SS "comment_projects"
.IX Subsection "comment_projects"
Type: has_many
.PP
Related object: SMM::Schema::Result::CommentProject
.SS "events"
.IX Subsection "events"
Type: has_many
.PP
Related object: SMM::Schema::Result::Event
.SS "goal_organizations"
.IX Subsection "goal_organizations"
Type: has_many
.PP
Related object: SMM::Schema::Result::GoalOrganization
.SS "invite_counsils"
.IX Subsection "invite_counsils"
Type: has_many
.PP
Related object: SMM::Schema::Result::InviteCounsil
.SS "managements"
.IX Subsection "managements"
Type: has_many
.PP
Related object: SMM::Schema::Result::Management
.SS "organization_type"
.IX Subsection "organization_type"
Type: belongs_to
.PP
Related object: SMM::Schema::Result::OrganizationType
.SS "subprefecture"
.IX Subsection "subprefecture"
Type: belongs_to
.PP
Related object: SMM::Schema::Result::Subprefecture
.SS "user_follow_counsils"
.IX Subsection "user_follow_counsils"
Type: has_many
.PP
Related object: SMM::Schema::Result::UserFollowCounsil
.SS "user_request_councils"
.IX Subsection "user_request_councils"
Type: has_many
.PP
Related object: SMM::Schema::Result::UserRequestCouncil
.SS "users"
.IX Subsection "users"
Type: has_many
.PP
Related object: SMM::Schema::Result::User
