.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "SMM::Schema::Result::User 3"
.TH SMM::Schema::Result::User 3 "2016-04-01" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
SMM::Schema::Result::User
.SH "COMPONENTS LOADED"
.IX Header "COMPONENTS LOADED"
.IP "\(bu" 4
DBIx::Class::InflateColumn::DateTime
.IP "\(bu" 4
DBIx::Class::TimeStamp
.IP "\(bu" 4
DBIx::Class::PassphraseColumn
.ie n .SH "TABLE: ""user"""
.el .SH "TABLE: \f(CWuser\fP"
.IX Header "TABLE: user"
.SH "ACCESSORS"
.IX Header "ACCESSORS"
.SS "id"
.IX Subsection "id"
.Vb 4
\&  data_type: \*(Aqinteger\*(Aq
\&  is_auto_increment: 1
\&  is_nullable: 0
\&  sequence: \*(Aquser_id_seq\*(Aq
.Ve
.SS "name"
.IX Subsection "name"
.Vb 2
\&  data_type: \*(Aqtext\*(Aq
\&  is_nullable: 0
.Ve
.SS "email"
.IX Subsection "email"
.Vb 2
\&  data_type: \*(Aqtext\*(Aq
\&  is_nullable: 0
.Ve
.SS "active"
.IX Subsection "active"
.Vb 3
\&  data_type: \*(Aqboolean\*(Aq
\&  default_value: true
\&  is_nullable: 0
.Ve
.SS "created_at"
.IX Subsection "created_at"
.Vb 4
\&  data_type: \*(Aqtimestamp\*(Aq
\&  default_value: current_timestamp
\&  is_nullable: 0
\&  original: {default_value => \e"now()"}
.Ve
.SS "password"
.IX Subsection "password"
.Vb 2
\&  data_type: \*(Aqtext\*(Aq
\&  is_nullable: 0
.Ve
.SS "created_by"
.IX Subsection "created_by"
.Vb 3
\&  data_type: \*(Aqinteger\*(Aq
\&  is_foreign_key: 1
\&  is_nullable: 1
.Ve
.SS "type"
.IX Subsection "type"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 12
.Ve
.SS "organization_id"
.IX Subsection "organization_id"
.Vb 3
\&  data_type: \*(Aqinteger\*(Aq
\&  is_foreign_key: 1
\&  is_nullable: 1
.Ve
.SS "username"
.IX Subsection "username"
.Vb 2
\&  data_type: \*(Aqtext\*(Aq
\&  is_nullable: 1
.Ve
.SS "phone_number"
.IX Subsection "phone_number"
.Vb 2
\&  data_type: \*(Aqtext\*(Aq
\&  is_nullable: 1
.Ve
.SS "image_perfil"
.IX Subsection "image_perfil"
.Vb 2
\&  data_type: \*(Aqtext\*(Aq
\&  is_nullable: 1
.Ve
.SS "accept_email"
.IX Subsection "accept_email"
.Vb 2
\&  data_type: \*(Aqboolean\*(Aq
\&  is_nullable: 1
.Ve
.SS "accept_sms"
.IX Subsection "accept_sms"
.Vb 2
\&  data_type: \*(Aqboolean\*(Aq
\&  is_nullable: 1
.Ve
.SS "request_council"
.IX Subsection "request_council"
.Vb 3
\&  data_type: \*(Aqboolean\*(Aq
\&  default_value: false
\&  is_nullable: 1
.Ve
.SS "mobile_campaign_id"
.IX Subsection "mobile_campaign_id"
.Vb 2
\&  data_type: \*(Aqinteger\*(Aq
\&  is_nullable: 1
.Ve
.SH "PRIMARY KEY"
.IX Header "PRIMARY KEY"
.IP "\(bu" 4
\&\*(L"id\*(R"
.SH "UNIQUE CONSTRAINTS"
.IX Header "UNIQUE CONSTRAINTS"
.ie n .SS """user_email_key"""
.el .SS "\f(CWuser_email_key\fP"
.IX Subsection "user_email_key"
.IP "\(bu" 4
\&\*(L"email\*(R"
.ie n .SS """user_username_key"""
.el .SS "\f(CWuser_username_key\fP"
.IX Subsection "user_username_key"
.IP "\(bu" 4
\&\*(L"username\*(R"
.SH "RELATIONS"
.IX Header "RELATIONS"
.SS "campaigns"
.IX Subsection "campaigns"
Type: has_many
.PP
Related object: SMM::Schema::Result::Campaign
.SS "comment_goals"
.IX Subsection "comment_goals"
Type: has_many
.PP
Related object: SMM::Schema::Result::CommentGoal
.SS "comment_projects"
.IX Subsection "comment_projects"
Type: has_many
.PP
Related object: SMM::Schema::Result::CommentProject
.SS "created_by"
.IX Subsection "created_by"
Type: belongs_to
.PP
Related object: SMM::Schema::Result::User
.SS "email_queues"
.IX Subsection "email_queues"
Type: has_many
.PP
Related object: SMM::Schema::Result::EmailQueue
.SS "events"
.IX Subsection "events"
Type: has_many
.PP
Related object: SMM::Schema::Result::Event
.SS "files"
.IX Subsection "files"
Type: has_many
.PP
Related object: SMM::Schema::Result::File
.SS "goals"
.IX Subsection "goals"
Type: has_many
.PP
Related object: SMM::Schema::Result::Goal
.SS "images_projects"
.IX Subsection "images_projects"
Type: has_many
.PP
Related object: SMM::Schema::Result::ImagesProject
.SS "organization"
.IX Subsection "organization"
Type: belongs_to
.PP
Related object: SMM::Schema::Result::Organization
.SS "password_resets"
.IX Subsection "password_resets"
Type: has_many
.PP
Related object: SMM::Schema::Result::PasswordReset
.SS "project_accept_porcentages"
.IX Subsection "project_accept_porcentages"
Type: has_many
.PP
Related object: SMM::Schema::Result::ProjectAcceptPorcentage
.SS "project_events"
.IX Subsection "project_events"
Type: has_many
.PP
Related object: SMM::Schema::Result::ProjectEvent
.SS "project_events_read"
.IX Subsection "project_events_read"
Type: has_many
.PP
Related object: SMM::Schema::Result::ProjectEventRead
.SS "user_follow_counsils"
.IX Subsection "user_follow_counsils"
Type: has_many
.PP
Related object: SMM::Schema::Result::UserFollowCounsil
.SS "user_follow_projects"
.IX Subsection "user_follow_projects"
Type: has_many
.PP
Related object: SMM::Schema::Result::UserFollowProject
.SS "user_request_councils"
.IX Subsection "user_request_councils"
Type: has_many
.PP
Related object: SMM::Schema::Result::UserRequestCouncil
.SS "user_roles"
.IX Subsection "user_roles"
Type: has_many
.PP
Related object: SMM::Schema::Result::UserRole
.SS "user_sessions"
.IX Subsection "user_sessions"
Type: has_many
.PP
Related object: SMM::Schema::Result::UserSession
.SS "users"
.IX Subsection "users"
Type: has_many
.PP
Related object: SMM::Schema::Result::User
